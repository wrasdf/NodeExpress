{
  "name": "express-csrf",
  "description": "Cross-site request forgery protection for Express",
  "version": "0.3.4",
  "author": {
    "name": "Linus G Thiel",
    "email": "linus@hanssonlarsson.se"
  },
  "contributors": [
    {
      "name": "Tane Piper",
      "url": "http://github.com/tanepiper"
    },
    {
      "name": "Stijn Debrouwere",
      "url": "http://github.com/stdbrouw"
    },
    {
      "name": "elisee",
      "url": "http://github.com/elisee"
    }
  ],
  "dependencies": {
    "express": ">= 2.0.0"
  },
  "keywords": [
    "middleware",
    "web",
    "csrf"
  ],
  "engines": {
    "node": ">= 0.2.0"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/hanssonlarsson/express-csrf.git"
  },
  "readme": "Express-CSRF: Cross-site request forgery protection for Express Node.js framework\n=================================================================================\n\n## This module is deprecated\n\nPlease use the [csrf middleware](http://senchalabs.github.com/connect/middleware-csrf.html) bundled with [Connect](http://senchalabs.github.com/connect/) instead.\n\n`express-csrf` is a simple helper for enabling cross-site request forgery protection in Express applications.\n\nIt provides a csrf token to views using dynamicHelpers, which is also saved in the session. With a middleware check, the csrf token in the request body is checked against the one in the session, to make sure that they match.\n\n## Version\n0.3.4\n\n## Requirements\n- [Node](http://github.com/ry/node)\n- [Express](http://github.com/visionmedia/express)\n\n## Installation\n\nRecommended installation is with npm. To add express-csrf to your project, do:\n\n    npm install express-csrf\n\nYou can also install express-csrf as a git submodule:\n\n    git submodule add http://github.com/hanssonlarsson/express-csrf.git lib/support/express-csrf\n\n## Usage\n\n    var express = require('express'),\n        csrf = require('express-csrf');\n    \n    app = express.createServer();\n    \n    app.dynamicHelpers({\n        csrf: csrf.token\n    });\n    \n    app.use(express.cookieParser());\n    app.use(express.bodyParser());\n    app.use(express.session());\n    app.use(csrf.check());\n    \n    app.listen(3000);\n\nIn your view:\n\n    <form>\n        <input type=\"hidden\" name=\"csrf\" value=csrf>\n    </form>\n\n## Credits\n\nLinus G Thiel &lt;linus@hanssonlarsson.se&gt;\n\n## Thank you\n\n- [Ryan Dahl](http://github.com/ry) for the awesome Node.js\n- [Visionmedia](http://github.com/visionmedia) for Express\n- [Tane Piper](http://github.com/tanepiper) for letting us know about Node's crypto module\n- [Stijn Debrouwere](http://github.com/stdbrouw)\n- [elisee](http://github.com/elisee)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2010 Hansson &amp; Larsson &lt;info@hanssonlarsson.se&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "express-csrf@0.3.4",
  "dist": {
    "shasum": "28e47c465e70bb5b80e736a1ba4d5b71d86f085c"
  },
  "_from": "express-csrf"
}
